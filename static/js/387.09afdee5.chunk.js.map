{"version":3,"file":"static/js/387.09afdee5.chunk.js","mappings":"sRAEaA,EAASC,EAAAA,EAAAA,IAAH,oIAQNC,EAAOD,EAAAA,EAAAA,IAAH,mEAIJE,EAAOF,EAAAA,EAAAA,GAAH,yc,SC0CjB,EAlDgB,WACd,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAoCE,EAAAA,EAAAA,UAAS,MAA7C,eAAOC,EAAP,KAAmBC,EAAnB,MAEAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBC,EAAAA,EAAAA,IAAWN,GAFlC,OAEUO,EAFV,OAGIH,EAAcG,GAHlB,gDAKIC,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACV,IAEJ,IAAMW,GACJ,SAACf,EAAD,WACE,SAACE,EAAD,UAAM,+CAIV,OACE,0BACGK,IACC,SAACJ,EAAD,UACiC,IAA9BI,EAAWS,QAAQC,OAChBF,EACAR,EAAWS,QAAQE,KAAI,SAAAC,GAAC,OACtB,2BACE,0BAAI,WAASA,EAAEC,WACf,uBAAID,EAAEE,YAFCF,EAAEG,GADW,OAUrC,C,mMC3CDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,qCAAwCC,IADtC,cACnBE,EADmB,yBAElBA,EAASf,KAAKK,SAFI,2CAAH,qDAKXW,EAAQ,mCAAG,WAAMvB,GAAN,yFACCmB,EAAAA,EAAAA,IAAA,gBAAmBnB,EAAnB,oBAAsCoB,IADvC,uBACdb,EADc,EACdA,KADc,kBAEfA,GAFe,2CAAH,sDAKRiB,EAAY,mCAAG,WAAMC,GAAN,uFACHN,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoBK,IAFjB,cACpBH,EADoB,yBAInBA,EAASf,KAAKK,SAJK,2CAAH,sDAOZc,EAAU,mCAAG,WAAM1B,GAAN,yFACDmB,EAAAA,EAAAA,IAAA,gBAAmBnB,EAAnB,4BAA8CoB,IAD7C,uBAChBb,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,sDAKVD,EAAU,mCAAG,WAAMN,GAAN,yFACDmB,EAAAA,EAAAA,IAAA,gBAAmBnB,EAAnB,4BAA8CoB,IAD7C,uBAChBb,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/Api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Review = styled.div`\n  display: flex;\n  justify-content: start;\n  font-size: 20px;\n  margin-top: 20px;\n  margin-left: 20px;\n`;\n\nexport const Text = styled.div`\n  margin-left: 5px;\n  margin-right: 5px;\n`;\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin-top: 20px;\n  & li {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n    padding: 5px;\n    box-shadow: 0 1px 4px #0000004d, -23px 0 20px -23px #000c,\n      23px 0 20px -23px #000c, inset 0 0 40px #0000001a;\n    & b {\n      background-color: #0000001a;\n      text-decoration: underline;\n      line-height: 20px;\n      font-size: 20px;\n    }\n  }\n`;","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { GetReviews } from '../../services/Api';\nimport PropTypes from 'prop-types';\nimport {Review, Text, List} from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [moviesData, setMoviesData] = useState(null);\n\n  useEffect(() => {\n    async function fetchReviews() {\n      try {\n        const data = await GetReviews(movieId);\n        setMoviesData(data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchReviews();\n  }, [movieId]);\n\n  const noReviews = (\n    <Review>\n      <Text>We don't have any reviews for this movie</Text>\n    </Review>\n  );\n\n  return (\n    <main>\n      {moviesData && (\n        <List>\n          {moviesData.results.length === 0\n            ? noReviews\n            : moviesData.results.map(e => (\n                <li key={e.id}>\n                  <h3>Author: {e.author}</h3>\n                  <p>{e.content}</p>\n                </li>\n              ))}\n        </List>\n      )}\n    </main>\n  );\n};\n\nReviews.propTypes = {\n  results: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n};\n\nexport default Reviews;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '89c47b4059eaa0549c29c88014fa56ba';\n\nexport const GetTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const MoviesId = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const SearchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n};\n\nexport const GetCredits = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const GetReviews = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return data;\n};\n"],"names":["Review","styled","Text","List","movieId","useParams","useState","moviesData","setMoviesData","useEffect","GetReviews","data","console","log","fetchReviews","noReviews","results","length","map","e","author","content","id","axios","API_KEY","GetTrending","response","MoviesId","SearchMovies","query","GetCredits"],"sourceRoot":""}