{"version":3,"file":"static/js/736.2d852175.chunk.js","mappings":"kRAEaA,E,QAAOC,EAAAA,GAAH,qzB,SCuEb,EAlES,WACT,IAAOC,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAAoCE,EAAAA,EAAAA,UAAS,MAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,2FACID,GAAa,GADjB,mBAG2BE,EAAAA,EAAAA,IAAWR,GAHtC,OAGcS,EAHd,OAIQL,EAAcK,GAJtB,gDAMQC,QAAQC,IAAR,MANR,yBAQQL,GAAa,GARrB,6EADY,uBAAC,WAAD,wBAYZM,EACH,GAAE,CAACZ,KAGA,4BACGK,IAAa,SAACQ,EAAA,EAAD,IACbV,IACC,SAACL,EAAD,UACGK,EAAWW,KAAKC,KAAI,SAAAC,GAAC,OACnB,0BACEA,EAAEC,cAGF,gBACEC,IAAG,yCAAoCF,EAAEC,cACzCE,IAAKH,EAAEI,KACPC,MAAM,SALR,0BAAM,cAQP,4BACE,wBAAKL,EAAEI,QACP,yBAAG,cAAYJ,EAAEM,iBAEnB,SAAC,EAAAC,SAAD,CAAUC,UAAU,SAACX,EAAA,EAAD,IAApB,UACc,SAAC,KAAD,QAfNG,EAAES,QADQ,QAwB/B,C,mMCvDLC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,qCAAwCC,IADtC,cACnBE,EADmB,yBAElBA,EAASpB,KAAKqB,SAFI,2CAAH,qDAKXC,EAAQ,mCAAG,WAAM/B,GAAN,yFACC0B,EAAAA,EAAAA,IAAA,gBAAmB1B,EAAnB,oBAAsC2B,IADvC,uBACdlB,EADc,EACdA,KADc,kBAEfA,GAFe,2CAAH,sDAKRuB,EAAY,mCAAG,WAAMC,GAAN,uFACHP,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoBM,IAFjB,cACpBJ,EADoB,yBAInBA,EAASpB,KAAKqB,SAJK,2CAAH,sDAOZtB,EAAU,mCAAG,WAAMR,GAAN,yFACD0B,EAAAA,EAAAA,IAAA,gBAAmB1B,EAAnB,4BAA8C2B,IAD7C,uBAChBlB,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,sDAKVyB,EAAU,mCAAG,WAAMlC,GAAN,yFACD0B,EAAAA,EAAAA,IAAA,gBAAmB1B,EAAnB,4BAA8C2B,IAD7C,uBAChBlB,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/Api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  align-items: center;\n  justify-content: center;\n\n  & li {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    gap: 5px;\n    width: 200px;\n    padding: 5px;\n    border: solid 1px aqua;\n    border-radius: 5px;\n    & img {\n      margin-right: auto;\n      margin-left: auto;\n    }\n    & span {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      width: 100px;\n      height: 150px;\n      border: solid 0.5px black;\n      background-color: grey;\n    }\n    & p {\n      padding: 5px;\n      text-align: center;\n      font-size: 16px;\n      height: 60px;\n    }\n    & b {\n      text-align: center;\n      font-size: 16px;\n    }\n  }\n`;","import { useParams, Outlet } from \"react-router-dom\";\nimport { useState, useEffect, Suspense } from \"react\";\nimport { GetCredits } from '../../services/Api';\nimport Loader from \"components/Loader\";\nimport PropTypes from 'prop-types';\nimport { List } from \"./Cast.styled\";\n\nconst Cast = () => {\n    const {movieId} = useParams();\n    const [moviesData, setMoviesData] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        async function fetchMovieDetails(){\n            setIsLoading(true);\n            try {\n                const data = await GetCredits(movieId);\n                setMoviesData(data);\n            } catch (error) {\n                console.log(error);\n            }finally {\n                setIsLoading(false)\n            }\n        }\n        fetchMovieDetails();\n    }, [movieId]);\n\n    return (\n        <main>\n          {isLoading && <Loader />}\n          {moviesData && (\n            <List>\n              {moviesData.cast.map(e => (\n                 <li key={e.cast_id}>\n                 {!e.profile_path ? (\n                   <span>No photo</span>\n                 ) : (\n                   <img\n                     src={`https://image.tmdb.org/t/p/w500${e.profile_path}`}\n                     alt={e.name}\n                     width=\"100\"\n                   />\n                 )}\n                  <div>\n                    <h3>{e.name}</h3>\n                    <p>Character: {e.character}</p>\n                  </div>\n                  <Suspense fallback={<Loader />}>\n                                <Outlet />\n                            </Suspense>\n                </li>\n              ))}\n            </List>\n          )}\n        </main>\n      );\n    };\n    \n    Cast.propTypes = {\n      moviesData: PropTypes.shape({\n        cast: PropTypes.arrayOf(\n          PropTypes.shape({\n            cast_id: PropTypes.number.isRequired,\n            name: PropTypes.string.isRequired,\n            character: PropTypes.string.isRequired,\n            profile_path: PropTypes.string,\n          })\n        ).isRequired,\n      }),\n    };\n    \n    \n    \n    export default Cast;","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '89c47b4059eaa0549c29c88014fa56ba';\n\nexport const GetTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const MoviesId = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const SearchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n};\n\nexport const GetCredits = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const GetReviews = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return data;\n};\n"],"names":["List","styled","movieId","useParams","useState","moviesData","setMoviesData","isLoading","setIsLoading","useEffect","GetCredits","data","console","log","fetchMovieDetails","Loader","cast","map","e","profile_path","src","alt","name","width","character","Suspense","fallback","cast_id","axios","API_KEY","GetTrending","response","results","MoviesId","SearchMovies","query","GetReviews"],"sourceRoot":""}