{"version":3,"file":"static/js/888.89e69866.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","services/Api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 15px;\n  padding: 0 0 20px 0;\n  margin-top: 10px;\n`;\n\nexport const Item = styled.li`\n  overflow: hidden;\n  border-radius: 5px;\n  border: solid 2px aqua;\n  transition-duration: 400ms;\n  :hover {\n    transform: scale(1.03);\n    transition-duration:  400ms;\n    box-shadow: 0 1px 4px #0000004d, -23px 0 20px -23px #000c,\n      23px 0 20px -23px #000c, inset 0 0 40px #0000001a;\n  }\n  & a {\n    color: #000000;\n    & div {\n      text-align: center;\n      width: 250px;\n      height: 460px;\n      & span {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        height: 376px;\n        border-bottom: solid 1px black;\n        font-size: 30px;\n      }\n      & img {\n        width: 250px;\n        margin-bottom: 5px;\n        border-bottom: solid 1px black;\n      }\n    }\n    & b {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      padding: 10px;\n      font-size: 16px;\n    }\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport {List, Item} from './MovieList.styled'\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <List>\n        {movies.map(({ id, title, poster_path }) => (\n          <Item key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <div>\n                {poster_path ? (\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                    alt={`Poster ${title}`}\n                    width=\"250px\"\n                    height=\"375px\"\n                  />\n                ) : (\n                  <span>No poster</span>\n                )}\n                <b>{title}</b>\n              </div>\n            </Link>\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n};\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n","import styled from '@emotion/styled';\nimport { FaSistrix } from 'react-icons/fa';\n\nexport const Icon = styled(FaSistrix)`\n  width: 25px;\n  height: 25px;\n  right: 6px;\n`;\n\nexport const Box = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  width: 300px;\n  height: 30px;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  border-radius: 3px;\n  width: 40px;\n  height: 40px;\n  border: 0;\n  opacity: 0.4;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  \n  &::placeholder {\n  font: inherit;\n  font-size: 18px;\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Box, Icon, Input, Button, Form } from './SearchBar.styled';\n\nconst SearchBar = ({value, onChange }) => {\n  const [movieValue, setMovieValue] = useState(value);\n  const nameChange = e => setMovieValue(e.currentTarget.value.toLowerCase());\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (movieValue.trim() !== '') {\n      onChange(movieValue);\n    }\n  };\n  return (\n    <Box>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          value={movieValue}\n          onChange={nameChange}\n          placeholder=\"search movie by name...\"\n        />\n        <Button>\n          <Icon />\n        </Button>\n      </Form>\n    </Box>\n  );\n};\nSearchBar.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import styled from '@emotion/styled'\n\nexport const Ring = styled.div`\ndisplay: flex;\njustify-content: center;\n`;\nexport const Div = styled.div`\ndisplay: flex;\njustify-content: center;\nmargin-top: 10px;\nfont-size: 20px;\n`;\n","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect, useCallback } from 'react';\nimport { SearchMovies } from '../../services/Api';\nimport MovieList from '../../components/MovieList';\nimport Loader from '../../components/Loader';\nimport SearchBar from '../../components/SearchBar';\nimport { Ring, Div } from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchName = searchParams.get('query') ?? '';\n\n  const handleSearch = useCallback(\n    query => {\n      const nextParams = query !== '' ? { query } : {};\n      setSearchParams(nextParams);\n    },\n    [setSearchParams]\n  );\n\n  useEffect(() => {\n    async function fetchMovies() {\n      try {\n        setIsLoading(true);\n        const data = await SearchMovies(searchName);\n        setMovies(data);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchMovies();\n  }, [searchName]);\n\n  return (\n    <main>\n      <SearchBar value={searchName} onChange={handleSearch} />\n      {isLoading && <Ring><Loader /></Ring> }\n      {movies.length > 0 ? (\n        <MovieList movies={movies} />\n      ) : (\n        <Div>There is no data to display</Div>\n      )}\n    </main>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '89c47b4059eaa0549c29c88014fa56ba';\n\nexport const GetTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const MoviesId = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const SearchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n};\n\nexport const GetCredits = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const GetReviews = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return data;\n};\n"],"names":["List","styled","Item","movies","location","useLocation","map","id","title","poster_path","to","state","from","src","alt","width","height","Icon","FaSistrix","Box","Form","Button","Input","value","onChange","useState","movieValue","setMovieValue","onSubmit","e","preventDefault","trim","type","currentTarget","toLowerCase","placeholder","Ring","Div","setMovies","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","searchName","get","handleSearch","useCallback","query","useEffect","SearchMovies","data","console","log","fetchMovies","Loader","length","MovieList","axios","API_KEY","GetTrending","response","results","MoviesId","movieId","GetCredits","GetReviews"],"sourceRoot":""}